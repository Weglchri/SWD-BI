Open Issues:

         src
             Projectmanager.addProject : verbindet in beide richtungen. gut
             Project.addProjectmanager : verbindet nur in eine richtung. gut
                 darf aber nicht public sein, der application programmer
                 soll nur Projectmanager.addProject verwenden duerfen


             Repositories
                 eine gemeinsame elternklasse waere gut, weil code-teile
                 (setEntityManager(...) in allen repos gleich sind.

                 namedQuery : da braucht es noch welche mit JOINs

             OfferRepository
                 findByName
                     sollte besser  findByPrice heissen

                     //results in our case a single result
                         na ja, bald wird es 2 offers mit dem gleichen preis geben
                         und dann wird es krachen.


         test

             TestSecurityReader
                 B_testReaderInsert
                     falls KEINE exception geworfen wird heisst das, das
                     die security nicht korrekt impl. ist
                     daher ist der test abzubrechen.
                     nach
                         managerReader.persist(location);
                     ist ein
                         Assert.fail
                     einzubauen

             TestSecurityReaderWriter
                 C_testReaderRemove
                     detto : Assert.fail






#Done -- Bidirektionalität
// die relationen sind z.T. nur einseitig vorhanden.
// z.b.: Offer -> Project : vorhanden
// Project -> Offer : fehlt

#Done -- Responsibility ist nun Participation
// ERD - sql die namen sind tw. verschieden, das macht das lesen schwieriger.
// ERD  : participate
// sql  : Responsibility

#Done -- Packages unter Tests eingefügt. Helper beinhaltet einen Controller und Daten.
// test - die setup() methode ist in allen tests gleich. die gehoert
// refactored - z.B. in eine gemeinsam elternklasse; oder
// noch besser in eine eigenen klasse in src - dann kann die
// application sie auch nutzen.

#DONE -- 21.11.2016 18:56h:
//TestProjectmanagerQuery - konnte nicht getestet werden, weil VPN Verbindung zur FH nicht mehr funkt.
//Daten sind eingecheckt.


#Done -- Der Liste musste die Intsanz hinzugefügt werden
//m:n - die Join-Tabelle (Responsibility) übernimmt keine Werte, obwohl die Verbindung zwischen
//Project und Projectmanager funktioniert.


#Done -- DTYPE aus Konstruktor % INHERITS aus SQL-SKRIPT entfernt
//SQL
//Freelancer und Projectmanager INHERITS (public.User) gut. aber nicht portble af eine anderes RDMBS :-(


#Done -- Sequences und Tests funktionieren
//User
//PK userId wird generiert (SERIAL) - dann braucht und darf
//man keinen wert beim konstruktor mitgeben !
//Wird die Datenbank mit Drop.sql gelöscht und Create.sql generiert,
//ist der Freelancer-Test & Projectmanager-Test nur beim ersten Test-Durchlauf positiv.
//Auch bei einem Freelancer-Test ist der darauffolgend Projectmanager-Test negativ.
/Eventuelle Ursache vermute ich dass der Merge im "modify"-Bereich
//in Verbindung mit der Auto-Generated-Squence der Id bei User Schuld hat.


#Done -- at.fhj.swd.BusinessIntelligence
//at.fhj.swd.dbanw
//das drueckt nicht aus um welches projekt es sich handelt - das
//gehoert schon in den url hinein


#Done -- Klasse gelöscht, Logik des M:N übernimmt Java
//Problem von M:N Auflösung in der Datenbank!
//M:N zwischen Projectmanager und Project wurde zu 2-mal 1:N aufgelöst!
//Das resultierte in in einer zusätzlichen Tabelle "Responsibility".
//Java kann diese Verbindung intern abhandeln, was diese Auflösung eventuell überflüssig macht!
//Dementsprechend müssen wir die Auflösung mit der Verbindungsannotations ManyToMany implementieren.


#Done -- wurde überall hinzugefügt
//User
//@ Table definition, warum hier das schema angegeben werden muss


#Done -- alle Default-Konsturktoren auf protected
//Offer
//der default konstruktor sollte nicht public sein.
//den benutzt ja nur JPA intern
//so koennte ein DAU inbenutzen, was keinen sinn ergibt.


#Done -- META-INF großgeschrieben
//meta-inf
//auf Linux / UNIX wird das crashen - denn dort wird gross-kleinschreibung untershieden!


#Done -- Persistance: name="BusinessIntelligence"
//persistence.xml
//persistence-unit name="persistence"
//der name hat info-wert 0 ! das sollte der name der DB sein!


##Redone -- (statt Joined wurde TABLE_PER_CLASS verwendet) -- Joined wurde belassen
//Vererbung: Freelancer- und Projectmanager-Klasse umschreiben, sodass sie Id, Email usw.. vom User vererbt kriegen.
//Im Moment funktionierts zwar auch so, die doppelten Werte sind aber grauslig.


#Done -- Fehler in der IntelliJ SQL-Begriffauflösung
//Nachfragen bezüglich Sequence, warum geht das erst am 1001 bzw. wenn die werte != 1 sind?